[gd_resource type="VisualShader" load_steps=11 format=3 uid="uid://u6qh2sdf4800"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_hoi6v"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_vloey"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_okm5n"]
default_input_values = [0, 0.0, 1, 0.02]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_l17ol"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_q8wry"]
output_port_for_preview = 2
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_qppvf"]
output_port_for_preview = 0
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_k6kwa"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1.0, 3, Vector3(0.135, 0, 0), 4, Vector3(2, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_uwlwh"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ocmgy"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_lsy8c"]
function = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
// Input:7
	float n_out7p0 = TIME;


// FloatFunc:8
	float n_out8p0 = sin(n_out7p0);


// FloatOp:10
	float n_in10p1 = 0.02000;
	float n_out10p0 = n_out8p0 * n_in10p1;


// VectorCompose:12
	float n_in12p0 = 0.00000;
	float n_in12p2 = 0.00000;
	vec3 n_out12p0 = vec3(n_in12p0, n_out10p0, n_in12p2);


// Input:2
	vec2 n_out2p0 = UV;
	float n_out2p2 = n_out2p0.g;


// VectorOp:6
	vec3 n_out6p0 = n_out12p0 + vec3(n_out2p0, 0.0);


// VectorFunc:4
	vec2 n_out4p0 = acos(vec2(n_out2p2));


	vec3 n_out5p0;
// If:5
	float n_in5p1 = 0.00000;
	float n_in5p2 = 1.00000;
	vec3 n_in5p3 = vec3(0.13500, 0.00000, 0.00000);
	vec3 n_in5p4 = vec3(2.00000, 0.00000, 0.00000);
	vec3 n_in5p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out4p0.x - n_in5p1) < n_in5p2)
	{
		n_out5p0 = n_in5p3;
	}
	else if(n_out4p0.x < n_in5p1)
	{
		n_out5p0 = n_in5p5;
	}
	else
	{
		n_out5p0 = n_in5p4;
	}


// Output:0
	UV = vec2(n_out6p0.xy);
	COLOR.a = n_out5p0.x;


}
"
mode = 1
flags/light_only = false
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_q8wry")
nodes/vertex/2/position = Vector2(-680, -40)
nodes/vertex/4/node = SubResource("VisualShaderNodeVectorFunc_qppvf")
nodes/vertex/4/position = Vector2(-180, 400)
nodes/vertex/5/node = SubResource("VisualShaderNodeIf_k6kwa")
nodes/vertex/5/position = Vector2(80, 400)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorOp_uwlwh")
nodes/vertex/6/position = Vector2(140, -80)
nodes/vertex/7/node = SubResource("VisualShaderNodeInput_ocmgy")
nodes/vertex/7/position = Vector2(-1080, -260)
nodes/vertex/8/node = SubResource("VisualShaderNodeFloatFunc_lsy8c")
nodes/vertex/8/position = Vector2(-840, -360)
nodes/vertex/10/node = SubResource("VisualShaderNodeFloatOp_okm5n")
nodes/vertex/10/position = Vector2(-640, -260)
nodes/vertex/12/node = SubResource("VisualShaderNodeVectorCompose_l17ol")
nodes/vertex/12/position = Vector2(-340, -260)
nodes/vertex/connections = PackedInt32Array(5, 0, 0, 3, 2, 2, 4, 0, 4, 0, 5, 0, 6, 0, 0, 1, 7, 0, 8, 0, 8, 0, 10, 0, 2, 0, 6, 1, 10, 0, 12, 1, 12, 0, 6, 0)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_hoi6v")
nodes/fragment/2/position = Vector2(-701.24, -46.7517)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_vloey")
nodes/fragment/4/position = Vector2(-200, -100)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0)
