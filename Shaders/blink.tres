[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://cmp1oidmf1vhn"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_dktwk"]
parameter_name = "flash"
default_value_enabled = true
default_value = Color(1, 1, 1, 0.686275)

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_p8qli"]
output_port_for_preview = 0
parameter_name = "hit"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_7fgd5"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ulyfp"]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool hit = false;
uniform vec4 flash : source_color = vec4(1.000000, 1.000000, 1.000000, 0.686275);



void fragment() {
// BooleanParameter:4
	bool n_out4p0 = hit;


// Input:6
	vec4 n_out6p0 = COLOR;


// ColorParameter:3
	vec4 n_out3p0 = flash;


	vec3 n_out5p0;
// If:5
	float n_in5p1 = 0.00000;
	float n_in5p2 = 0.00001;
	vec3 n_in5p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs((n_out4p0 ? 1.0 : 0.0) - n_in5p1) < n_in5p2)
	{
		n_out5p0 = vec3(n_out6p0.xyz);
	}
	else if((n_out4p0 ? 1.0 : 0.0) < n_in5p1)
	{
		n_out5p0 = n_in5p5;
	}
	else
	{
		n_out5p0 = vec3(n_out3p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out5p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(660, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeColorParameter_dktwk")
nodes/fragment/3/position = Vector2(-160, 400)
nodes/fragment/4/node = SubResource("VisualShaderNodeBooleanParameter_p8qli")
nodes/fragment/4/position = Vector2(-80, -60)
nodes/fragment/5/node = SubResource("VisualShaderNodeIf_7fgd5")
nodes/fragment/5/position = Vector2(340, 180)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_ulyfp")
nodes/fragment/6/position = Vector2(-200, 300)
nodes/fragment/connections = PackedInt32Array(5, 0, 0, 0, 4, 0, 5, 0, 6, 0, 5, 3, 3, 0, 5, 4)
