[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://w2ui20amvo0a"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_8ifgc"]
parameter_name = "flash"
default_value_enabled = true
default_value = Color(1, 1, 1, 0.686275)

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_xnvgk"]
output_port_for_preview = 0
parameter_name = "hit"
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_ovjw1"]
output_port_for_preview = 0

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool hit = false;
uniform vec4 flash : source_color = vec4(1.000000, 1.000000, 1.000000, 0.686275);



void fragment() {
// BooleanParameter:3
	bool n_out3p0 = hit;


// ColorParameter:2
	vec4 n_out2p0 = flash;


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in4p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs((n_out3p0 ? 1.0 : 0.0) - n_in4p1) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if((n_out3p0 ? 1.0 : 0.0) < n_in4p1)
	{
		n_out4p0 = n_in4p5;
	}
	else
	{
		n_out4p0 = vec3(n_out2p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_8ifgc")
nodes/fragment/2/position = Vector2(-520, 400)
nodes/fragment/3/node = SubResource("VisualShaderNodeBooleanParameter_xnvgk")
nodes/fragment/3/position = Vector2(-440, -60)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_ovjw1")
nodes/fragment/4/position = Vector2(-20, 180)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 4, 4, 4, 0, 0, 0)
